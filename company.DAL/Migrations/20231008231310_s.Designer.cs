// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using company.DAL.Entity;

#nullable disable

namespace company.DAL.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20231008231310_s")]
    partial class s
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("company.DAL.Repository.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_departments");

                    b.ToTable("Departments", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.bonuss", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("Bonusflag")
                        .HasColumnType("bit");

                    b.Property<string>("bonusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("bonusValue")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("bonuss", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("date");

                    b.Property<int>("deprtmentId")
                        .HasColumnType("int");

                    b.Property<string>("employeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("date");

                    b.Property<int>("genderId")
                        .HasColumnType("int");

                    b.Property<bool?>("isAvtive")
                        .HasColumnType("bit");

                    b.Property<int?>("jobId")
                        .HasColumnType("int");

                    b.Property<string>("nationalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phone1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("religionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("deprtmentId");

                    b.HasIndex("genderId");

                    b.HasIndex("jobId");

                    b.HasIndex("religionId");

                    b.ToTable("employees", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.employeesBonu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("bonusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.Property<int>("employeeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("bonusId");

                    b.HasIndex("employeeId");

                    b.ToTable("employeesBonus", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.employeesVacation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("employeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fromDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("toDate")
                        .HasColumnType("datetime");

                    b.Property<int>("vacationId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.HasIndex("vacationId");

                    b.ToTable("employeesVacations", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.gender", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("genderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("gender", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.job", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("jobName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("salary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("jobs", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.religion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("religionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("religions", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.vacation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double>("vacationCost")
                        .HasColumnType("float");

                    b.Property<string>("vacationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("vacations", "hr");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.employee", b =>
                {
                    b.HasOne("company.DAL.Repository.Models.Department", "deprtment")
                        .WithMany("employees")
                        .HasForeignKey("deprtmentId")
                        .IsRequired()
                        .HasConstraintName("FK_employees_Departments");

                    b.HasOne("company.DAL.Repository.Models.gender", "gender")
                        .WithMany("employees")
                        .HasForeignKey("genderId")
                        .IsRequired()
                        .HasConstraintName("FK_employees_gender");

                    b.HasOne("company.DAL.Repository.Models.job", "job")
                        .WithMany("employees")
                        .HasForeignKey("jobId")
                        .HasConstraintName("FK_employees_jobs");

                    b.HasOne("company.DAL.Repository.Models.religion", "religion")
                        .WithMany("employees")
                        .HasForeignKey("religionId")
                        .IsRequired()
                        .HasConstraintName("FK_employees_religions");

                    b.Navigation("deprtment");

                    b.Navigation("gender");

                    b.Navigation("job");

                    b.Navigation("religion");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.employeesBonu", b =>
                {
                    b.HasOne("company.DAL.Repository.Models.bonuss", "bonus")
                        .WithMany("employeesBonus")
                        .HasForeignKey("bonusId")
                        .IsRequired()
                        .HasConstraintName("FK_employeesBonus_bonuss");

                    b.HasOne("company.DAL.Repository.Models.employee", "employee")
                        .WithMany("employeesBonus")
                        .HasForeignKey("employeeId")
                        .IsRequired()
                        .HasConstraintName("FK_employeesBonus_employees");

                    b.Navigation("bonus");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.employeesVacation", b =>
                {
                    b.HasOne("company.DAL.Repository.Models.employee", "employee")
                        .WithMany("employeesVacations")
                        .HasForeignKey("employeeId")
                        .IsRequired()
                        .HasConstraintName("FK_employeesVacations_employees");

                    b.HasOne("company.DAL.Repository.Models.vacation", "vacation")
                        .WithMany("employeesVacations")
                        .HasForeignKey("vacationId")
                        .IsRequired()
                        .HasConstraintName("FK_employeesVacations_vacations");

                    b.Navigation("employee");

                    b.Navigation("vacation");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.Department", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.bonuss", b =>
                {
                    b.Navigation("employeesBonus");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.employee", b =>
                {
                    b.Navigation("employeesBonus");

                    b.Navigation("employeesVacations");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.gender", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.job", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.religion", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("company.DAL.Repository.Models.vacation", b =>
                {
                    b.Navigation("employeesVacations");
                });
#pragma warning restore 612, 618
        }
    }
}
